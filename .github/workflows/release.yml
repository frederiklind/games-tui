
name: Test Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  RELEASE_VERSION: v0.0.1
  RELEASE_NOTES: "New release for version v0.0.1"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash
    - name: Test with pytest
      run: |
        pytest
    - name: Install PyInstaller
      run: |
        pip install pyinstaller
    - name: Build binary for Ubuntu/MacOS
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" || "${{ matrix.os }}" == "macos-latest" ]]; then
          pyinstaller --onefile src/games_tui/main.py
        fi
      shell: bash
      if: runner.os != 'Windows'
      
    - name: Build binary for Windows
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          pyinstaller --onefile --windowed src/games_tui/main.py
        fi
      shell: pwsh
      if: runner.os == 'Windows'
      
    - name: Set output for binaries
      id: set-binary-output
      run: |
        echo "ubuntu_binary=dist/games-tui" >> $GITHUB_ENV
        echo "macos_binary=dist/games-tui" >> $GITHUB_ENV
        echo "windows_binary=dist/games-tui.exe" >> $GITHUB_ENV

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Create source code archive
      run: |
        tar -czf source-code.tar.gz ./src ./conf ./data
        zip -r source-code.zip ./src ./conf ./data
    - name: Create GitHub release and upload assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          source-code.tar.gz
          source-code.zip
          ${{ needs.build.outputs.ubuntu_binary }}
          ${{ needs.build.outputs.macos_binary }}
          ${{ needs.build.outputs.windows_binary }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

